checklist:
- Narrative document entries verified
- Reviewed core memory docs and protocol before implementing optional fallbacks
- Reviewed First Consecrated Computation ceremony log
documents:
  AGENTS.md:
    commit: 88f4756580e20789a1ad633a9394cad5eada2fe6
    sha256: 663ab5eb6e973b5761be4952b156921aa724fec5ae1af136cc177d8c73cc3371
    summary:
      insight: Check AGENTS.md before committing changes.
      key_rules: Review AGENTS and run pre-commit before committing.
      purpose: Repository-wide agent instructions.
      scope: Entire repository.
  NEOABZU/docs/OROBOROS_Engine.md:
    commit: 3b1fc917ae1aef10d9ea48dd54fc8dd88a446188
    sha256: 8d6b52354e79cbb3142df7f46e251bedd30c27387f538f6185043434bc3b780b
    signed_by: onboarding-wizard
    summary:
      insight: Details eigenvector-based alignment.
      key_rules: Anchor algorithms to the sacred lexicon.
      purpose: Inevitability engine overview.
      scope: Neo-APSU recursion and alignment core.
  NEOABZU/docs/OROBOROS_Lexicon.md:
    commit: bbcef1bc4df51ae9c29deec77042613ab8d53858
    sha256: 3e4ef6ce83562e8276d7ecf041542dd56ef06c2181325ed36551e85f03d787d2
    signed_by: onboarding-wizard
    summary:
      insight: Archaic roles anchor glyph behavior to Sumerian cosmology.
      key_rules: Use documented glyph meanings when implementing core components.
      purpose: Canonical lexicon of OROBOROS glyph correspondences.
      scope: Narrative roles and meanings for Neo-ABZU glyphs.
  NEOABZU/docs/Oroboros_Core.md:
    sha256: 47bf13231e0fb20b9e18ada20fb3622b4517da372b14af202972424e34d352bb
    signed_at: '2025-09-13T11:04:43.345033Z'
    signed_by: anonymous
    summary:
      insight: purpose
      key_rules: y
      purpose: ''
      scope: ''
  NEOABZU/docs/QNL_Library.md:
    commit: bbcef1bc4df51ae9c29deec77042613ab8d53858
    sha256: 8276cfca4eb28cd5768dd2efbadd2267a03b67a48a5318106e1b6f81e80e82fd
    signed_by: onboarding-wizard
    summary:
      insight: Provides glyph data for inevitability gradients.
      key_rules: Map glyphs to lambda interpretations.
      purpose: QNL Tier I glyph definitions.
      scope: Sumerian lexicon for OROBOROS.
  NEOABZU/docs/SUMERIAN_33WORDS.md:
    commit: 24fc51fbdfdee2c60e4a29dbdd12c4f6ad3dc0d0
    sha256: 734543539adf317a173fff3006b2535e999f66a1667ac177af6bd69c5e15ebb4
    signed_by: onboarding-wizard
    summary:
      insight: Terms align by embedding the 33 sacred words.
      key_rules: Use these concepts as the core vocabulary.
      purpose: Sacred lexicon of 33 primordial Sumerian concepts.
      scope: OROBOROS language and narrative primitives.
  NEOABZU/docs/herojourney_engine.md:
    commit: e01e6d9e3c6d080a079aa5cb721b3bd3dc6ca30b
    sha256: 3c21434aa4486999c6c319f99aa982e23043b3443645424651a6a2b7ab8b8f17
    signed_by: onboarding-wizard
    summary:
      insight: Hero's Journey encodes the inevitability gradient.
      key_rules: Trace reduction events through defined stages.
      purpose: Maps reduction steps to a 12-stage heroic narrative.
      scope: Neo-ABZU narrative engine.
  NEOABZU/docs/migration_crosswalk.md:
    commit: 757c452324fa8a380a8970175290cd03e8d78512
    sha256: 2a1cbeb2e7dc8dd24f7cf4ac7e2a911980d5226ce94261a947d683294776b14d
    signed_by: onboarding-wizard
    summary:
      insight: neoabzu-memory crate bundles core memory layers.
      key_rules: Keep Python modules aligned with their Rust counterparts.
      purpose: Map Python subsystems to Rust crates.
      scope: NEOABZU migration mapping and integration.
  NEOABZU/docs/onboarding.md:
    commit: worktree
    sha256: 75b17a22dc78660e2bf018feff915dfc7472a7893ca680b9d75cbabf2050050b
    signed_by: onboarding-wizard
    summary:
      insight: Cross-reference ABZU docs to maintain consistency.
      key_rules: Align NEOABZU work with ABZU blueprints and referenced protocols.
      purpose: NEOABZU migration onboarding guide.
      scope: NEOABZU contributors.
  NEOABZU/fusion/src/lib.rs:
    commit: fff6b1b6a475d754c56325c26f4a774260a70d09
    sha256: 8132a32d580a574dba843a309aaf263c18e8b9d714501f3cf8532085349347e4
    summary:
      insight: Fuse selects entry with greatest inevitability.
      key_rules: Choose invariant with highest gradient.
      purpose: Invariance fusion engine connecting symbolic and numeric realms.
      scope: Symbolic and numeric invariants.
  NEOABZU/numeric/src/lib.rs:
    commit: 8d7d4d6ee16d3e3cd1d6fcab51ceef0589622ed5
    sha256: 96e74731b07fa23c04a68613dbdde521560e8c46c230c45f82e4bd2ec147e873
    summary:
      insight: find_principal_components returns principal directions.
      key_rules: Compute principal components via power iteration.
      purpose: Numeric utilities including Principal Component Analysis.
      scope: Linear algebra operations.
  agents/nazarick/nazarick_core_architecture.md:
    commit: c2d9e40dd6602dfc1b210513ea666333ecefee80
    sha256: d30ed1392ff91d4269e644da871f2ed5bb565e5d202a8abf683e10c80845f516
    summary:
      insight: Operator commands supersede all agent actions.
      key_rules: Stream agent events with narrative tags and archive critical logs
        immutably.
      purpose: Design real-time observability framework and channel hierarchy for
        Spiral OS.
      scope: Nazarick monitoring architecture and operator interface.
  agents/nazarick/nazarick_memory_blueprint.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 45bbde8a01a6531d169f537380e47c54b07a8a97641b611a4d833b1631f5f621
    summary:
      insight: Personality fragments from vectors adapt agents to current state.
      key_rules: Store memories in vectors, summarize long interactions, and coordinate
        via defined APIs.
      purpose: Blueprint for human-like agent personality, memory, planning, and expression.
      scope: Nazarick agent traits, memory stores, and communication protocols.
  component_index.json:
    commit: 75a3bcbbc22cfe35a359c934c1900696b0c70967
    sha256: 82203936da694e37f71c3a3105be0eb4a4a1f32258282476a4d5b3d0df1a2566
    summary:
      insight: Review after component edits to keep versions aligned.
      key_rules: Sync module __version__ values with listed versions.
      purpose: Machine-readable registry of components and versions.
      scope: Entire system component inventory.
  docs/ABZU_SUBSYSTEM_OVERVIEW.md:
    commit: f2afdf4c91a8b8286faea4d1f25511ab56fdd365
    sha256: 8168179d78a4af60a1186bf7a2b35db48f4404613000c47c24081d85d1ab4a8a
    summary:
      insight: Review to understand component interactions.
      key_rules: Respect subsystem interaction boundaries.
      purpose: Overview of ABZU subsystems.
      scope: System architecture.
  docs/ABZU_blueprint.md:
    commit: 2c610c1f4587079a4bb9a17c07573edf82194a10
    sha256: 9e231117fe0eb457e7c23335fac6bd57061b0c19ca4f278ec23f228e2fb37bf8
    summary:
      insight: Defines mission, memory bundle, and agent flows.
      key_rules: Sync with system blueprint when components evolve.
      purpose: Architectural and narrative blueprint for ABZU.
      scope: Entire system overview.
  docs/CROWN_OVERVIEW.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 179c5a4f08996de8efe3d623a4ae9f38e302f7bdd73a6eb00770ccfd10b169a3
    summary:
      insight: Documents operator relay and mission brief logging.
      key_rules: Document operator relay and logging.
      purpose: Crown agent architecture and routing.
      scope: Crown-to-RAZAR interaction.
  docs/INDEX.md:
    commit: worktree
    sha256: 9759f3be3ed39028849a953d88ee03c28d6aa63f199b01eb135eb4414d0dde46
    summary:
      insight: Regenerate with tools/doc_indexer.py after updating docs.
      key_rules: Regenerate index after documentation updates.
      purpose: Generated documentation index.
      scope: Repository documentation.
  docs/KEY_DOCUMENTS.md:
    commit: 57b7dcb03679e8a415fef16ffc4b724689059c96
    sha256: 740cf6675a3180ebad0b83b3dd5ad63ad782149538ce1667ef5a9a1b9eeb002c
    summary:
      insight: Ensure `onboarding_confirm.yml` includes purpose, scope, key rules,
        and insight for each key document.
      key_rules: Record hashes and four-part summaries for protected files.
      purpose: List of essential repository documents.
      scope: Key repository guides.
  docs/RAZAR_AGENT.md:
    commit: 75a3bcbbc22cfe35a359c934c1900696b0c70967
    sha256: bb9b8ae172a9bc370dddb2f5a3e2e9f37cc3f03f349f59e1452371dd0d5fb557
    summary:
      insight: "Cross\u2011link to related guides and keep configuration schemas current."
      key_rules: Keep RAZAR agent configuration synced.
      purpose: Comprehensive RAZAR agent guide.
      scope: RAZAR agent workflows and deployment.
  docs/The_Absolute_Protocol.md:
    commit: worktree
    sha256: cb2d88ef978337dac062f2a9d5bc8144dbc5bf669afd6a5a3f720c449ae337a4
    summary:
      insight: Central doctrine coordinates versioning, MCP governance, and documentation
        duties for every subsystem.
      key_rules: Declare `__version__` for modules, register connector changes in
        the indexes, and mirror architecture updates across blueprint files.
      purpose: Canonical contribution protocol and governance contract.
      scope: All contributors and subsystems.
  docs/api_reference.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 6273ffa4258f9015f3e1b06d1dadbfd3f03f0585f0fee79bc1ba1c32e2f00721
    summary:
      insight: Keep implementations aligned with documented API.
      key_rules: Keep implementations aligned with documented API.
      purpose: API endpoints and schemas.
      scope: Public interfaces.
  docs/architecture_overview.md:
    commit: 757c452324fa8a380a8970175290cd03e8d78512
    sha256: 8599df0a465b00f24704fc2fbe3015a7ef8d42338a179e954ab1e146a6f2cd4d
    summary:
      insight: Align new modules with existing architecture.
      key_rules: Maintain architectural consistency.
      purpose: High-level system architecture.
      scope: Entire platform.
  docs/assets/narrative_engine_flow.mmd:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 9b418b5de9a790064dca91375f560d6378c8d111a0c563deafb637a8e65284d9
    summary:
      insight: Consult to understand event propagation to memory and operator.
      key_rules: Visual reference for narrative engine routing.
      purpose: "Mermaid flow diagram of event\u2192Mistral\u2192multi-track outputs\u2192\
        memory/operator."
      scope: Nazarick narrative system pipeline.
  docs/bana_engine.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 878ab78976e9d7f39d9d96eabbbc9cb2442e412080fcdb1d62bab9a72a991518
    summary:
      insight: Reference for narrative generation components.
      key_rules: Configure narrative pipelines as specified.
      purpose: Bana narrative engine guide.
      scope: Training data and workflow.
  docs/blueprint_spine.md:
    commit: worktree
    sha256: 7dc3517a463373b3749b29848dc98cf3146e2b3c1d45f506c203c353ade6bd31
    summary:
      insight: Highlights triadic stack and operator-first design, including the MCP
        startup handshake and heartbeat loop for operator connectors.
      key_rules: Keep cross-links and diagrams synchronized.
      purpose: Deep-dive overview of mission, agents, and memory bundle.
      scope: System structure and narratives.
  docs/chakra_heartbeat.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: a8e25c7afb3f05181c7842262a820c6caf28e568522698dfd5c5fc851a503b1f
    summary:
      insight: Links heartbeat telemetry with recovery workflows.
      key_rules: Maintain canonical timing and self-healing triggers.
      purpose: Heartbeat subsystem overview and roadmap.
      scope: Chakra and agent pulse coordination.
  docs/communication_interfaces.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: b788697d3e7bc1c7fdf609eb9abafd15af67afbcbe47162a0fbab77437efc660
    summary:
      insight: Maintain compatibility with listed interfaces.
      key_rules: Maintain interface compatibility.
      purpose: Communication interfaces overview.
      scope: Internal and external interfaces.
  docs/component_index.md:
    commit: 2c610c1f4587079a4bb9a17c07573edf82194a10
    sha256: 9b21067fb3dbb0b0390a68b7df325484db907eda6616f6c2c3068e3907e4f04d
    summary:
      insight: Add/update entries for component changes.
      key_rules: Update index when components change.
      purpose: Inventory of modules and services.
      scope: All components.
  docs/connector_health_protocol.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 597b0e1eac92b1b6f7a3a1a97e2b403afaa12c3611da2b209357352971cefa60
    summary:
      insight: Run the health check to catch connector outages early.
      key_rules: Run `python scripts/health_check_connectors.py` and merge only if
        it succeeds.
      purpose: Ensure connectors respond to health checks before merge.
      scope: All connectors.
  docs/connectors/CONNECTOR_INDEX.md:
    commit: worktree
    sha256: e26eeaf5c18cbabdc235e6f89708319c0cd4a7829951c8fc9a9df404dab06dcb
    summary:
      insight: Ensure this registry entry reflects live MCP status for each connector.
      key_rules: Update registry when connector changes.
      purpose: Registry of connector details.
      scope: All connectors.
  docs/connectors/README.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 4ddf766eb9f046673acbdc4a52f2a99111221f7b8fdeb7837abca93e7762f76b
    summary:
      insight: Follow guidelines to ensure interoperability.
      key_rules: Follow connector subsystem guidelines.
      purpose: Connector subsystem guidelines.
      scope: Connector development.
  docs/dependency_registry.md:
    commit: 6bcf0c0bda1e9b9ed15863044a7714df267d879f
    sha256: e5c7b4b2f8e2d9daf82d8dc9320245a5612e1fbdc230209a22eb0a397ed0f47a
    summary:
      insight: Verify dependencies against registry before adding.
      key_rules: Use only approved dependencies.
      purpose: Approved dependencies.
      scope: Project dependencies.
  docs/documentation_protocol.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: ae84f16638303413f944fd3a2b0adf70679c3ee82c06eefa2ab18c1141468239
    summary:
      insight: Run pre-commit with modified docs before committing.
      key_rules: Follow documentation workflow and sync blueprint.
      purpose: Workflow for updating documentation.
      scope: All documentation changes.
  docs/index.md:
    commit: worktree
    sha256: b253fd93c3ae7a6afbb9e90efbc9b71bb1f8fb52c2b9f4e0986968e7f8b491a5
    summary:
      insight: Links to Nazarick architecture, system blueprints, and the live Operator
        MCP adoption audit.
      key_rules: Maintain curated documentation entry points.
      purpose: Curated documentation entry points.
      scope: Top-level docs index.
  docs/logging_guidelines.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: e090bdc32a69a7f6b144967dd70f163f6fb8322a23671334caa6dbcbc4185cf3
    summary:
      insight: Use prescribed JSON format for logs.
      key_rules: Use prescribed JSON logging format.
      purpose: Structured logging requirements.
      scope: Logging across modules.
  docs/narrative_engine_GUIDE.md:
    commit: 3c4f81b51eff75d5d5ccd63d732f954524296773
    sha256: 3714db9071090d4c430ab986bd0e7b0bece10051277688d9bf0a8eb99fc69be7
    summary:
      insight: Provides setup and architecture for biosignal-driven narrative engine.
      key_rules: Use documented ingestion and event structures.
      purpose: Guide for deploying and extending narrative engine.
      scope: Biosignal ingestion to memory persistence.
  docs/narrative_framework.md:
    commit: 3c4f81b51eff75d5d5ccd63d732f954524296773
    sha256: 3774d01dff11be3df543c625cbd3e3c93fe1c23b880f1f6ee2189be87ef1ef4b
    summary:
      insight: Biosignals transform into narratives via defined stages.
      key_rules: Align orchestration with framework stages.
      purpose: Maps biosignal streams to narrative pipeline.
      scope: Narrative orchestration across the stack.
  docs/nazarick_agents.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 9cfdb5732c777137ca29fe3796729c7a2fd3af751dddf6dca9faedd435c0321f
    summary:
      insight: Chakracon telemetry signals energy anomalies to operators.
      key_rules: Launch servants with provided scripts and monitor chakra alerts.
      purpose: Roster and launch guide for Nazarick servant agents.
      scope: Agent roles, channels, and Chakracon telemetry.
  docs/nazarick_narrative_system.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: aa86c1e0e1cf0b4a5a9cfe80b4e1e34af815482d357630827d72994404fd065b
    summary:
      insight: Reference for biosignal ingestion and narrative logging pipeline.
      key_rules: Use documented schema and narrative_api endpoints when processing
        biosignals.
      purpose: Describes architecture, dataset schema, and event flow for converting
        biosignals into narratives.
      scope: Nazarick narrative system.
  docs/onboarding/README.md:
    commit: b3b80343640e18d6ff3ae9eabdee3b082400e9e9
    sha256: c076d51890edea8aacc029e680ca356f1feeefb9a1266ec35da5c66f797787de
    summary:
      insight: Use checklist to verify setup.
      key_rules: Complete checklist before coding.
      purpose: Onboarding checklist.
      scope: New contributors.
  docs/onboarding/test_planning.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: dbacb76c8b866af82bf7531b5facf9ffb9de708c9a55cec042fba1c19e9dc7a0
    summary:
      insight: Open a test plan issue before major changes.
      key_rules: Open a test plan issue before major changes.
      purpose: Guide for filing Test Plan issues.
      scope: Test planning.
  docs/onboarding_walkthrough.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: b7d57d6fe6ee327301e134e36a959474431e7a0c511dd999a168ddad1485cdeb
    summary:
      insight: Follow sequentially to avoid missing steps.
      key_rules: Follow onboarding steps sequentially.
      purpose: Step-by-step onboarding walkthrough.
      scope: Initial repository orientation.
  docs/operator_protocol.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: b0968dbce29fcfa2d073df89e790b2ca2d66099df5b0eaa718db6e1c564fa45e
    summary:
      insight: Verify new channels conform to protocol.
      key_rules: Ensure new channels obey operator protocol.
      purpose: Operator interaction rules.
      scope: Operator channels.
  docs/os_guardian.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 1b32ad1d78f3b19332b6dfc1c06c4ad8ea9578d0d850947712c33ec04e184eab
    summary:
      insight: Review before modifying system protection code.
      key_rules: Review before altering system protection code.
      purpose: OS Guardian subsystem overview.
      scope: OS Guardian component.
  docs/persona_api_guide.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 1f28b25f1ca7abb6bcec6eb2a50db819715763e2100aa855f765090a838d6fdb
    summary:
      insight: Ensure persona calls match documented schema.
      key_rules: Ensure persona API matches documented schema.
      purpose: Persona API usage instructions.
      scope: Persona endpoints.
  docs/primordials_service.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: f78c0d426c2acafe7a00f2b322250c4d3f1a17646b0df152376fad1d55d545bb
    summary:
      insight: Reference when integrating Primordials.
      key_rules: Use defined orchestration endpoints.
      purpose: DeepSeek-V3 orchestration service guide.
      scope: Primordials service.
  docs/project_mission_vision.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 93fbef74abd1b02affbe63700c276faf523de816e99b9cc44752f8b6aaf6d27e
    summary:
      insight: Review before proposing major shifts in scope.
      key_rules: Align major changes with documented mission and vision.
      purpose: Unified mission and vision for ABZU.
      scope: Project direction and guiding principles.
  docs/project_overview.md:
    commit: 943e87db07e6aa29aeb2c80e09de87b580eb00d1
    sha256: 548532448052efd7fe94b1127808be37a89c9bb14098cc504fae08cced6c65fd
    summary:
      insight: Confirm contributions align with project goals.
      key_rules: Keep contributions aligned with project scope.
      purpose: Project goals and scope.
      scope: Entire project.
  docs/rag_music_oracle.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: b506c9213c26af25dc0e295b11215dd19d6a1100cfb7902e64be47120784c7d6
    summary:
      insight: Validate music queries against this spec.
      key_rules: Validate music queries against the oracle spec.
      purpose: Music oracle RAG details.
      scope: Music-specific RAG.
  docs/rag_pipeline.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 7479d96d3ebb8f819b894444a0747bab6730b2bbad1b61a2a055565901e65fd0
    summary:
      insight: Ensure changes preserve pipeline flow.
      key_rules: Preserve RAG pipeline flow.
      purpose: Retrieval-augmented generation pipeline.
      scope: RAG processes.
  docs/security_model.md:
    commit: c391103899511758ae5ea6b6ecfce2d1d0a27573
    sha256: 9f317bf2c71c9a311245a5caef584320900456def4b218615f0838b216333b55
    summary:
      insight: Apply recommended safeguards in code.
      key_rules: Apply listed security safeguards.
      purpose: Threat model and protections.
      scope: Security considerations.
  docs/spiral_cortex_terminal.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 863463fb3e7b92021d747b5f4bdc4cb20e608469d64ed69917bf8be7b8177724
    summary:
      insight: Reference when troubleshooting terminal actions.
      key_rules: Use terminal commands as documented.
      purpose: Spiral Cortex terminal guide.
      scope: Terminal interface.
  docs/system_blueprint.md:
    commit: worktree
    sha256: c6e68868e08dd4f5bdf87ba003ae8ff2444f487a4507151cc18d45b05af7ca70
    summary:
      insight: Describes heartbeat propagation and the MCP adapter startup flow for
        operator services.
      key_rules: Keep component changes reflected in blueprint.
      purpose: Operational architecture and recovery flows.
      scope: System components and lifecycle.
  docs/vector_memory.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 2641055d12ec9f6ae2fe2df6a52f9fc7dc928f8597aacae8f71f707dbdfa7ea8
    summary:
      insight: Review before modifying memory features.
      key_rules: Preserve vector memory API contracts.
      purpose: Guide to vector memory subsystem.
      scope: Vector memory component.
  docs/vision_system.md:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 8952a8e014ee24a9ee772f2598abdfccb7bf5abfd907973de5f7f8ee9474bfad
    summary:
      insight: Check before altering visual models.
      key_rules: Align changes with vision system requirements.
      purpose: Vision system documentation.
      scope: Vision modules.
  scripts/check_env.py:
    commit: 18ad40926d0b92ad8e2bb4fbc93a9d5d650d73d9
    sha256: 9139ea1892bad4c4374f862684285f56fbb17c293ca95c1a4132d9a1659f4632
    summary:
      insight: Run before committing to catch missing dependencies.
      key_rules: Run to verify dependencies before committing.
      purpose: Pre-flight environment check for core tools.
      scope: All contributors.
