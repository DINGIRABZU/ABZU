documents:
  AGENTS.md:
    sha256: 08aab5d3dabd13cc0937d5e6574bbed143346c5340c13578224336c1ecdc2671
    summary:
      purpose: Repository-wide agent instructions.
      scope: Entire repository.
      key_rules: Review AGENTS and run pre-commit before committing.
      insight: Check AGENTS.md before committing changes.
  docs/ABZU_SUBSYSTEM_OVERVIEW.md:
    sha256: e575ff650f076601f2dae9c09ccc3b0658999204f71a22508aab24c98f050445
    summary:
      purpose: Overview of ABZU subsystems.
      scope: System architecture.
      key_rules: Respect subsystem interaction boundaries.
      insight: Review to understand component interactions.
  docs/architecture_overview.md:
    sha256: dcd829f05771560880d78a9639d0e90253fe76c57d38a17aae560cdcf95c4640
    summary:
      purpose: High-level system architecture.
      scope: Entire platform.
      key_rules: Maintain architectural consistency.
      insight: Align new modules with existing architecture.
  docs/bana_engine.md:
    sha256: 878ab78976e9d7f39d9d96eabbbc9cb2442e412080fcdb1d62bab9a72a991518
    summary:
      purpose: Bana narrative engine guide.
      scope: Training data and workflow.
      key_rules: Configure narrative pipelines as specified.
      insight: Reference for narrative generation components.
  docs/documentation_protocol.md:
    sha256: ae84f16638303413f944fd3a2b0adf70679c3ee82c06eefa2ab18c1141468239
    summary:
      purpose: Workflow for updating documentation.
      scope: All documentation changes.
      key_rules: Follow documentation workflow and sync blueprint.
      insight: Run pre-commit with modified docs before committing.
  docs/project_overview.md:
    sha256: 4f4b07972085bc9341a56b1fb85f37da8354e726a73e10f03613fcc5f83b76b1
    summary:
      purpose: Project goals and scope.
      scope: Entire project.
      key_rules: Keep contributions aligned with project scope.
      insight: Confirm contributions align with project goals.
  docs/project_mission_vision.md:
    sha256: e9fcd6d8f460c00aaa02fba3e1760accf06d24c8caa3cb8358e2e5f75aed832e
    summary:
      purpose: Unified mission and vision for ABZU.
      scope: Project direction and guiding principles.
      key_rules: Align major changes with documented mission and vision.
      insight: Review before proposing major shifts in scope.
  docs/onboarding/README.md:
    sha256: 34f9af9b460e4e59da73545465cece4e5994ada1beb00fe7d91b549816872fac
    summary:
      purpose: Onboarding checklist.
      scope: New contributors.
      key_rules: Complete checklist before coding.
      insight: Use checklist to verify setup.
  docs/onboarding_walkthrough.md:
    sha256: b7d57d6fe6ee327301e134e36a959474431e7a0c511dd999a168ddad1485cdeb
    summary:
      purpose: Step-by-step onboarding walkthrough.
      scope: Initial repository orientation.
      key_rules: Follow onboarding steps sequentially.
      insight: Follow sequentially to avoid missing steps.
  docs/vector_memory.md:
    sha256: e4cd2186d833fd47c7a23034281e9f4e8ba5bc2e8265e4f4f9029b15d6967e28
    summary:
      purpose: Guide to vector memory subsystem.
      scope: Vector memory component.
      key_rules: Preserve vector memory API contracts.
      insight: Review before modifying memory features.
  docs/rag_pipeline.md:
    sha256: 24d2154f4a2db1aceba6aaf05c03bc6c34119ba58b82159345f5d2c0eb36e0dc
    summary:
      purpose: Retrieval-augmented generation pipeline.
      scope: RAG processes.
      key_rules: Preserve RAG pipeline flow.
      insight: Ensure changes preserve pipeline flow.
  docs/rag_music_oracle.md:
    sha256: b506c9213c26af25dc0e295b11215dd19d6a1100cfb7902e64be47120784c7d6
    summary:
      purpose: Music oracle RAG details.
      scope: Music-specific RAG.
      key_rules: Validate music queries against the oracle spec.
      insight: Validate music queries against this spec.
  docs/vision_system.md:
    sha256: 8952a8e014ee24a9ee772f2598abdfccb7bf5abfd907973de5f7f8ee9474bfad
    summary:
      purpose: Vision system documentation.
      scope: Vision modules.
      key_rules: Align changes with vision system requirements.
      insight: Check before altering visual models.
  docs/persona_api_guide.md:
    sha256: 767d276cddcb865a844c3e730aa2affc9d57ab6ebb52f3c4c05040288c94121f
    summary:
      purpose: Persona API usage instructions.
      scope: Persona endpoints.
      key_rules: Ensure persona API matches documented schema.
      insight: Ensure persona calls match documented schema.
  docs/primordials_service.md:
    sha256: f78c0d426c2acafe7a00f2b322250c4d3f1a17646b0df152376fad1d55d545bb
    summary:
      purpose: DeepSeek-V3 orchestration service guide.
      scope: Primordials service.
      key_rules: Use defined orchestration endpoints.
      insight: Reference when integrating Primordials.
  docs/spiral_cortex_terminal.md:
    sha256: 863463fb3e7b92021d747b5f4bdc4cb20e608469d64ed69917bf8be7b8177724
    summary:
      purpose: Spiral Cortex terminal guide.
      scope: Terminal interface.
      key_rules: Use terminal commands as documented.
      insight: Reference when troubleshooting terminal actions.
  docs/communication_interfaces.md:
    sha256: c9d210710b6e3f7bbf943c99d6a40443a8fa67f7c96e5fcdcd4881193923a17a
    summary:
      purpose: Communication interfaces overview.
      scope: Internal and external interfaces.
      key_rules: Maintain interface compatibility.
      insight: Maintain compatibility with listed interfaces.
  docs/component_index.md:
    sha256: 9b21067fb3dbb0b0390a68b7df325484db907eda6616f6c2c3068e3907e4f04d
    summary:
      purpose: Inventory of modules and services.
      scope: All components.
      key_rules: Update index when components change.
      insight: Add/update entries for component changes.
  docs/CROWN_OVERVIEW.md:
    sha256: 179c5a4f08996de8efe3d623a4ae9f38e302f7bdd73a6eb00770ccfd10b169a3
    summary:
      purpose: Crown agent architecture and routing.
      scope: Crown-to-RAZAR interaction.
      key_rules: Document operator relay and logging.
      insight: Documents operator relay and mission brief logging.
  docs/connectors/CONNECTOR_INDEX.md:
    sha256: b04f986afaf3b3c3a0b5e47ff2f5a0aec8a9de9b6b7f9f781d384de1c94292c8
    summary:
      purpose: Registry of connector details.
      scope: All connectors.
      key_rules: Update registry when connector changes.
      insight: Ensure this registry entry is revised whenever a connector changes.
  docs/connectors/README.md:
    sha256: 4ddf766eb9f046673acbdc4a52f2a99111221f7b8fdeb7837abca93e7762f76b
    summary:
      purpose: Connector subsystem guidelines.
      scope: Connector development.
      key_rules: Follow connector subsystem guidelines.
      insight: Follow guidelines to ensure interoperability.
  docs/connector_health_protocol.md:
    sha256: 597b0e1eac92b1b6f7a3a1a97e2b403afaa12c3611da2b209357352971cefa60
    summary:
      purpose: Ensure connectors respond to health checks before merge.
      scope: All connectors.
      key_rules: Run `python scripts/health_check_connectors.py` and merge only if it succeeds.
      insight: Run the health check to catch connector outages early.
  docs/system_blueprint.md:
    sha256: 829f695e39205bfc9e698e44fc6b159cb290aef6209df27bf79f63f63e32865b
    summary:
      purpose: Architectural blueprint overview.
      scope: System-wide architecture.
      key_rules: Align changes with blueprint structure.
      insight: Align changes with blueprint structure.
  docs/KEY_DOCUMENTS.md:
    sha256: aa1ff0f09543cb28c5a7c954cbcc737208225da05251b1e1715df56d28c96f94
    summary:
      purpose: List of essential repository documents.
      scope: Key repository guides.
      key_rules: Record hashes and four-part summaries for protected files.
      insight: Ensure `onboarding_confirm.yml` includes purpose, scope, key rules, and insight for each key document.
  docs/security_model.md:
    sha256: 9f317bf2c71c9a311245a5caef584320900456def4b218615f0838b216333b55
    summary:
      purpose: Threat model and protections.
      scope: Security considerations.
      key_rules: Apply listed security safeguards.
      insight: Apply recommended safeguards in code.
  docs/The_Absolute_Protocol.md:
    sha256: 5aee0d9e2067a375c9b293528f1e7984f18da82ddc6170425834a46fcf00bff7
    summary:
      purpose: Core contribution rules.
      scope: All contributors.
      key_rules: Provide change justification, align __version__ with component_index.json, and maintain key-document summaries.
      insight: Align component versions and document summaries; run ignition validation via `validate_ignition.py` and consult `docs/ignition_flow.md` for the sequence.
  docs/dependency_registry.md:
    sha256: e5c7b4b2f8e2d9daf82d8dc9320245a5612e1fbdc230209a22eb0a397ed0f47a
    summary:
      purpose: Approved dependencies.
      scope: Project dependencies.
      key_rules: Use only approved dependencies.
      insight: Verify dependencies against registry before adding.
  docs/logging_guidelines.md:
    sha256: e090bdc32a69a7f6b144967dd70f163f6fb8322a23671334caa6dbcbc4185cf3
    summary:
      purpose: Structured logging requirements.
      scope: Logging across modules.
      key_rules: Use prescribed JSON logging format.
      insight: Use prescribed JSON format for logs.
  docs/api_reference.md:
    sha256: 6273ffa4258f9015f3e1b06d1dadbfd3f03f0585f0fee79bc1ba1c32e2f00721
    summary:
      purpose: API endpoints and schemas.
      scope: Public interfaces.
      key_rules: Keep implementations aligned with documented API.
      insight: Keep implementations aligned with documented API.
  docs/operator_protocol.md:
    sha256: 7f92a3f3f118e48ac098fe10e01a946cd4e473ff097e4eb150b0a307061f86fa
    summary:
      purpose: Operator interaction rules.
      scope: Operator channels.
      key_rules: Ensure new channels obey operator protocol.
      insight: Verify new channels conform to protocol.
  docs/os_guardian.md:
    sha256: 1b32ad1d78f3b19332b6dfc1c06c4ad8ea9578d0d850947712c33ec04e184eab
    summary:
      purpose: OS Guardian subsystem overview.
      scope: OS Guardian component.
      key_rules: Review before altering system protection code.
      insight: Review before modifying system protection code.
  docs/INDEX.md:
    sha256: 20521d8900fb7b6ef726e25bc48a39416ff476e955c15c096d6288dd3c1f8cbc
    summary:
      purpose: Generated documentation index.
      scope: Repository documentation.
      key_rules: Regenerate index after documentation updates.
      insight: Regenerate with tools/doc_indexer.py after updating docs.
  docs/index.md:
    sha256: 2acebbe3802143e395727844880430a286ae76dce858936ecaf23c46366937c3
    summary:
      purpose: Curated documentation entry points.
      scope: Top-level docs index.
      key_rules: Maintain curated documentation entry points.
      insight: Add Crown overview to architecture section.
  docs/nazarick_narrative_system.md:
    sha256: 378dffc4746cdd3bb287a564a170beaade90513b6f75ca7fb40ccf8de85a2b0e
    summary:
      purpose: Guide to how biosignals become narrative events within the Nazarick domain.
      scope: Nazarick narrative system.
      key_rules: Use defined agents and pipelines when transforming biosignals.
      insight: Reference for converting biosignals into multi-modal narrative outputs.
  docs/RAZAR_AGENT.md:
    sha256: eb733a36bb7ba9cba6ba07919e5b8754302a191e000b979467d98c234814e532
    summary:
      purpose: Comprehensive RAZAR agent guide.
      scope: RAZAR agent workflows and deployment.
      key_rules: Keep RAZAR agent configuration synced.
      insight: "Cross\u2011link to related guides and keep configuration schemas current."
  docs/onboarding/test_planning.md:
    sha256: dbacb76c8b866af82bf7531b5facf9ffb9de708c9a55cec042fba1c19e9dc7a0
    summary:
      purpose: Guide for filing Test Plan issues.
      scope: Test planning.
      key_rules: Open a test plan issue before major changes.
      insight: Open a test plan issue before major changes.
  scripts/check_env.py:
    sha256: 9139ea1892bad4c4374f862684285f56fbb17c293ca95c1a4132d9a1659f4632
    summary:
      purpose: Pre-flight environment check for core tools.
      scope: All contributors.
      key_rules: Run to verify dependencies before committing.
      insight: Run before committing to catch missing dependencies.
