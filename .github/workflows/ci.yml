name: CI

on:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

# Reusable anchors keep the workflow maintainable
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - &checkout
        name: Checkout repository
        uses: actions/checkout@v4

      - &setup-python
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip  # Cache dependencies for speed
          cache-dependency-path: |
            pyproject.toml
            requirements.txt
            dev-requirements.txt

      - &install-deps
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install ruff black mypy pytest jsonschema

      - name: Ruff
        run: ruff check .

      - name: Black
        run: black --check --exclude tests .

      - name: Mypy
        run: mypy

      - name: Validate JSON schemas
        run: python scripts/validate_schemas.py

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - *checkout
      - *setup-python
      - *install-deps
      - name: Run tests
        run: pytest
      - name: Run auto retrain and learning mutator tests
        run: pytest tests/test_auto_retrain.py tests/test_learning_mutator.py
      - name: Run interaction log tests
        run: pytest tests/test_interactions_jsonl_integrity.py
      - name: Profiling
        run: python -m cProfile -m task_profiling
  corpus-memory-log-rotation:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-python
      - *install-deps
      - name: Exercise corpus memory log rotation
        run: |
          python - <<'PY'
          import os
          os.environ['CORPUS_LOG_MAX_BYTES'] = '200'
          import corpus_memory_logging as cml
          log = cml.INTERACTIONS_FILE
          log.parent.mkdir(parents=True, exist_ok=True)
          if log.exists():
              log.unlink()
          for i in range(100):
              cml.log_interaction(str(i), {}, {}, 'ok')
          assert log.with_name(log.name + '.1').exists()
          PY
