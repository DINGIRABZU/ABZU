{
  "$schema": "./schemas/component_index.schema.json",
  "system_version": "0.1.1",
  "index_version": 1,
  "components": [
    {
      "id": "server",
      "chakra": "crown",
      "type": "service",
      "version": "0.1.1",
      "path": "server.py",
      "purpose": "HTTP entry point for Spiral OS",
      "dependencies": [
        "fastapi"
      ],
      "tests": [
        "tests/test_server.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 1,
      "adr": null
    },
    {
      "id": "razar",
      "chakra": "root",
      "type": "agent",
      "version": "0.2.2",
      "path": "agents/razar",
      "purpose": "Bootstraps services and coordinates recovery",
      "dependencies": [
        "pyyaml",
        "prometheus_client"
      ],
      "tests": [
        "tests/test_razar_health_checks.py",
        "tests/agents/razar/test_boot_orchestrator.py",
        "tests/agents/razar/test_boot_orchestrator_logging.py",
        "tests/agents/razar/test_crown_handshake.py",
        "tests/ignition/test_full_stack.py",
        "tests/ignition/test_crown_wakes_services.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 0,
      "adr": null
    },
    {
      "id": "crown",
      "chakra": "crown",
      "type": "module",
      "version": "0.3.1",
      "path": "crown_router.py",
      "purpose": "Routes prompts among crown services",
      "dependencies": [
        "crown_config"
      ],
      "tests": [
        "tests/crown/test_crown_initialization.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 2,
      "adr": null
    },
    {
      "id": "inanna",
      "chakra": "heart",
      "type": "package",
      "version": "0.1.0",
      "path": "INANNA_AI",
      "purpose": "Empathic AI core for audio and memory",
      "dependencies": [
        "numpy"
      ],
      "tests": [
        "tests/test_inanna_ai.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 3,
      "adr": null
    },
    {
      "id": "inanna_ai_agent",
      "chakra": "heart",
      "type": "agent",
      "version": "0.1.0",
      "path": "INANNA_AI_AGENT",
      "purpose": "CLI for INANNA rituals",
      "dependencies": [
        "transformers"
      ],
      "tests": [],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 3,
      "adr": null
    },
    {
      "id": "albedo",
      "chakra": "crown",
      "type": "agent",
      "version": "0.1.1",
      "path": "agents/albedo",
      "purpose": "Personality layer and trust modules",
      "dependencies": [
        "agents"
      ],
      "tests": [
        "tests/test_albedo_personality.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 3,
      "adr": null
    },
    {
      "id": "nazarick",
      "chakra": "crown",
      "type": "agent",
      "version": "0.1.1",
      "path": "agents/nazarick",
      "purpose": "Guardian hierarchy, ethics manifesto, trust matrix and narrative scribe",
      "dependencies": [
        "memory",
        "pyyaml",
        "redis",
        "aiokafka"
      ],
      "tests": [
        "tests/agents/nazarick/test_ethics_manifesto.py",
        "tests/agents/nazarick/test_trust_matrix.py",
        "tests/agents/test_narrative_scribe.py",
        "tests/test_nazarick_messaging.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 3,
      "adr": null
    },
    {
      "id": "memory_layers",
      "chakra": "root",
      "type": "subsystem",
      "version": "0.3.0",
      "path": "memory",
      "purpose": "Layered memory stores for system state",
      "dependencies": [
        "sqlite3"
      ],
      "tests": [
        "tests/test_spiral_memory.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "init_memory_layers",
      "chakra": "root",
      "type": "script",
      "version": "0.1.0",
      "path": "scripts/init_memory_layers.sh",
      "purpose": "Initialize memory stores with sample data",
      "dependencies": [],
      "tests": [],
      "memory_layers": ["cortex", "emotional", "mental", "spiritual", "narrative"],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 0,
      "adr": null
    },
    {
      "id": "memory_cortex",
      "chakra": "heart",
      "type": "module",
      "version": "0.1.1",
      "path": "memory/cortex.py",
      "purpose": "Lightweight spiral memory with tag index",
      "dependencies": [],
      "tests": [
        "tests/memory/test_cortex_concurrency.py",
        "tests/test_cortex_memory.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "memory_emotional",
      "chakra": "heart",
      "type": "module",
      "version": "0.1.1",
      "path": "memory/emotional.py",
      "purpose": "Persist and query emotional feature vectors",
      "dependencies": [
        "sqlite3"
      ],
      "tests": [
        "tests/test_memory_emotional.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "memory_mental",
      "chakra": "heart",
      "type": "module",
      "version": "0.1.1",
      "path": "memory/mental.py",
      "purpose": "Neo4j-backed task memory",
      "dependencies": [
        "neo4j"
      ],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "memory_spiritual",
      "chakra": "heart",
      "type": "module",
      "version": "0.1.1",
      "path": "memory/spiritual.py",
      "purpose": "SQLite-backed event to symbol ontology",
      "dependencies": [
        "sqlite3"
      ],
      "tests": [
        "tests/test_memory_spiritual.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "narrative_engine",
      "chakra": "heart",
      "type": "module",
      "version": "0.3.0",
      "path": "memory/narrative_engine.py",
      "purpose": "Records events and composes multitrack narrative output",
      "dependencies": ["chromadb"],
      "tests": [
        "tests/narrative_engine/test_biosignal_pipeline.py",
        "tests/narrative_engine/test_biosignal_transformation.py",
        "tests/narrative_engine/test_ingestion_to_mistral_output.py",
        "tests/narrative_engine/test_ingest_persist_retrieve.py",
        "tests/narrative_engine/test_multitrack_output.py"
      ],
      "status": "experimental",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "operator_interface",
      "chakra": "crown",
      "type": "service",
      "version": "0.3.2",
      "path": "operator_api.py",
      "purpose": "FastAPI routes for operator commands and uploads",
      "dependencies": [
        "fastapi"
      ],
      "tests": [
        "tests/test_operator_api.py"
      ],
      "status": "active",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 2,
      "adr": null
    },
    {
      "id": "narrative_api",
      "chakra": "heart",
      "type": "service",
      "version": "0.1.1",
      "path": "bana/narrative_api.py",
      "purpose": "FastAPI routes for narrative retrieval and streaming",
      "dependencies": [
        "fastapi"
      ],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "primordials_api",
      "chakra": "crown",
      "type": "service",
      "version": "0.1.1",
      "path": "connectors/primordials_api.py",
      "purpose": "Relay narrative metrics to the Primordials service",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {},
      "ignition_stage": 2,
      "adr": null
    },
    {
      "id": "webrtc_connector",
      "chakra": "crown",
      "type": "connector",
      "version": "0.3.2",
      "path": "connectors/webrtc_connector.py",
      "purpose": "WebRTC bridge for real-time avatar streaming",
      "dependencies": [
        "fastapi",
        "aiortc"
      ],
      "tests": [
        "tests/test_webrtc_connector.py"
      ],
      "status": "experimental",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 2,
      "adr": null
    },
    {
      "id": "primordials_service",
      "chakra": "crown",
      "type": "service",
      "version": "0.0.1",
      "path": "services/primordials_service",
      "purpose": "Hosts DeepSeek-V3 invocation endpoints",
      "dependencies": [
        "fastapi"
      ],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 5,
      "adr": null
    },
    {
      "id": "bana",
      "chakra": "heart",
      "type": "agent",
      "version": "0.0.2",
      "path": "agents/bana",
      "purpose": "Biosignal-driven narrative generation",
      "dependencies": [
        "agents.event_bus",
        "biosppy",
        "connectors.primordials_api",
        "memory.cortex",
        "memory.emotional",
        "memory.narrative_engine",
        "numpy",
        "spiral_memory",
        "transformers"
      ],
      "tests": [
        "tests/agents/test_bana.py",
        "tests/agents/test_bana_narrator.py",
        "tests/ignition/test_crown_wakes_services.py"
      ],
      "memory_layers": ["cortex", "emotional", "narrative"],
      "status": "experimental",
      "metrics": {
        "coverage": 1.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "bana_bio_adaptive_narrator",
      "chakra": "heart",
      "type": "module",
      "version": "0.0.2",
      "path": "agents/bana/bio_adaptive_narrator.py",
      "purpose": "Generate narrative text from biosignal streams",
      "dependencies": [
        "biosppy",
        "numpy",
        "transformers",
        "memory.narrative_engine",
        "spiral_memory",
        "connectors.primordials_api"
      ],
      "tests": [
        "tests/agents/test_bana.py",
        "tests/agents/test_bana_narrator.py"
      ],
      "status": "experimental",
      "metrics": {"coverage": 1.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "bana_inanna_bridge",
      "chakra": "heart",
      "type": "module",
      "version": "0.0.2",
      "path": "agents/bana/inanna_bridge.py",
      "purpose": "Bridge structured INANNA interactions into Bana's narrative engine",
      "dependencies": ["agents.event_bus"],
      "tests": [],
      "status": "experimental",
      "metrics": {"coverage": 1.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "bana_event_structurizer",
      "chakra": "heart",
      "type": "module",
      "version": "0.1.0",
      "path": "bana/event_structurizer.py",
      "purpose": "Translate biosignals into schema-validated events",
      "dependencies": ["jsonschema"],
      "tests": [
        "tests/bana/test_event_structurizer.py"
      ],
      "status": "experimental",
      "metrics": {"coverage": 1.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "core_memory_physical",
      "chakra": "root",
      "type": "module",
      "version": "0.1.0",
      "path": "src/core/memory_physical.py",
      "purpose": "Persist raw physical inputs and metadata",
      "dependencies": [],
      "tests": [
        "tests/core/test_memory_physical.py"
      ],
      "status": "experimental",
      "metrics": {"coverage": 1.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "audio_mix_tracks",
      "chakra": "throat",
      "type": "module",
      "version": "0.1.0",
      "path": "src/audio/mix_tracks.py",
      "purpose": "Combine audio stems into multi-track outputs",
      "dependencies": [],
      "tests": [
        "tests/audio/test_mix_tracks.py"
      ],
      "status": "experimental",
      "metrics": {"coverage": 1.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "bana_events_dataset",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.0.1",
      "path": "data/bana/events.jsonl",
      "purpose": "Structured event logs for narrative generation",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "bana_narratives_dataset",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.0.1",
      "path": "data/bana/narratives.jsonl",
      "purpose": "Curated story samples for fine-tuning",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "biosignals_samples",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.0.1",
      "path": "data/biosignals",
      "purpose": "Anonymized biosignal CSVs for ingestion tests",
      "dependencies": [],
      "tests": [
        "tests/narrative_engine/test_biosignal_pipeline.py",
        "tests/narrative_engine/test_biosignal_transformation.py",
        "tests/narrative_engine/test_ingest_persist_retrieve.py"
      ],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "narrative_story_db",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.0.1",
      "path": "data/narrative_engine.db",
      "purpose": "SQLite store of narrative events",
      "dependencies": [],
      "tests": [
        "tests/narrative_engine/test_ingest_persist_retrieve.py"
      ],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "primordials_config",
      "chakra": "crown",
      "type": "config",
      "version": "0.0.1",
      "path": "schemas/primordials_config.schema.yaml",
      "purpose": "Configuration schema for Primordials service",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 5,
      "adr": null
    },
    {
      "id": "nazarick_agent_registry",
      "chakra": "crown",
      "type": "config",
      "version": "0.1.0",
      "path": "agents/nazarick/agent_registry.yaml",
      "purpose": "Registry of Nazarick agents and launch metadata",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {
        "coverage": 0.0
      },
      "ignition_stage": 0,
      "adr": null
    },
    {
      "id": "fine_tune_mistral",
      "chakra": "crown",
      "type": "module",
      "version": "0.1.0",
      "path": "training/fine_tune_mistral.py",
      "purpose": "Configure Mistral fine-tuning on mythological and project materials",
      "dependencies": ["transformers"],
      "tests": [],
      "status": "experimental",
      "metrics": {"coverage": 0.0},
      "ignition_stage": 5,
      "adr": null
    },
    {
      "id": "mythology_corpus",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.1.0",
      "path": "data/mythology_corpus",
      "purpose": "Compiled myths and legends for narrative enrichment",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {"coverage": 0.0},
      "ignition_stage": 4,
      "adr": null
    },
    {
      "id": "project_materials",
      "chakra": "heart",
      "type": "dataset",
      "version": "0.1.0",
      "path": "data/project_materials",
      "purpose": "Internal narratives and documents for contextual tuning",
      "dependencies": [],
      "tests": [],
      "status": "experimental",
      "metrics": {"coverage": 0.0},
      "ignition_stage": 4,
      "adr": null
    }
  ]
}
