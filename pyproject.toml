[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "spiral-os"
version = "0.1.0"
description = "Spiral OS command line tools and agents"
authors = [{name = "Spiral OS Team"}]
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}

# Runtime requirements keep only lightweight essentials. Heavy frameworks are
# exposed individually through extras below.
dependencies = [
    "numpy==2.2.6",
    "scipy==1.16.1",
    "pandas==2.2.3",
    "requests==2.32.4",
    "python-json-logger==3.3.0",
    "pyyaml==6.0.2",
    "psutil==7.0.0",
    "omegaconf==2.3.0",
    "pydantic==2.9.2",
    "uvicorn==0.35.0",
    "prometheus-fastapi-instrumentator==6.1.0",
]

[project.optional-dependencies]
minimal = []
pytorch = ["torch==2.8.0"]
tensorflow = ["tensorflow==2.17.0"]
jax = [
    "jax==0.4.28",
    "jaxlib==0.4.28",
]
spatial = [
    "torch==2.8.0",
    "open3d==0.18.0",
    "pytorch3d==0.7.6",
]
transformers = [
    "transformers==4.55.2",
    "huggingface-hub==0.34.4",
    "sentencepiece==0.2.1",
    "einops==0.8.1",
]
sentence_transformers = ["sentence-transformers==5.1.0"]
accelerate = ["accelerate==1.10.0"]
librosa = ["librosa==0.11.0"]
ffmpeg = ["ffmpeg-python==0.2.0"]
soundfile = ["soundfile==0.13.1"]
opensmile = ["opensmile==2.5.1"]
voicefixer = ["voicefixer==0.1.3"]
pydub = ["pydub==0.25.1"]
chromadb = ["chromadb==1.0.17"]
mlflow = ["mlflow==3.2.0"]
langchain = ["langchain==0.3.27"]
aiortc = ["aiortc==1.13.0"]
pyautogui = ["pyautogui==0.9.54"]
opencv = ["opencv-python==4.12.0.88"]
pytesseract = ["pytesseract==0.3.13"]
selenium = ["selenium==4.35.0"]
fastapi = ["fastapi==0.116.1"]
streamlit = ["streamlit==1.48.1"]
beautifulsoup4 = ["beautifulsoup4==4.13.4"]
scapy = ["scapy==2.6.1"]
stable_baselines3 = ["stable-baselines3==2.7.0"]
emotivoice = ["EmotiVoice==0.2.0"]
wav2lip = ["wav2lip==1.2.4"]
ultralytics = ["ultralytics==8.3.179"]
optuna = ["optuna==3.6.1"]
shap = ["shap==0.45.0"]

tracing = [
    "opentelemetry-api==1.36.0",
    "opentelemetry-exporter-otlp==1.36.0",
]

mental = [
    "neo4j==5.23.1",
]
emotional = [
    "transformers==4.55.2",
    "dlib==19.24.2",
]
spiritual = []
narrative = [
    "chromadb==1.0.17",
    "pynvml==11.5.3",
]

citadel = [
    "redis==5.0.3",
    "aiokafka==0.10.0",
    "asyncpg==0.29.0",
    "neo4j==5.23.1",
]

# Development extras mirror dev-requirements.txt
# including testing and formatting tools
dev = [
    "numpy==2.2.6",
    "scipy==1.16.1",
    "soundfile==0.13.1",
    "librosa==0.11.0",
    "pydub==0.25.1",
    "pytest==8.4.1",
    "pytest-cov==5.0.0",
    "markdown==3.8.2",
    "requests==2.32.4",
    "fastapi==0.116.1",
    "opentelemetry-api==1.36.0",
    "opentelemetry-exporter-otlp==1.36.0",
    "beautifulsoup4==4.13.4",
    "pyopenssl==25.1.0",
    "streamlit==1.48.1",
    "python-json-logger==3.3.0",
    "httpx==0.28.1",
    "scikit-learn==1.7.1",
    "jupyter==1.1.1",
    "pandas==2.2.3",
    "black==25.1.0",
    "flake8==7.3.0",
    "isort==6.0.1",
    "pre-commit==4.3.0",
    "bandit==1.8.6",
    "psutil==7.0.0",
    "coverage[toml]==7.6.10",
]

[project.scripts]
os-guardian = "os_guardian.cli:main"
crown-console = "cli.console_interface:run_repl"
spiral-cortex = "cli.spiral_cortex_terminal:main"
voice-cli = "cli.voice:main"
spiral-os = "spiral_os.__main__:main"
# Unified developer helper
inanna = "cli:main"
crown-prompt = "crown_prompt_orchestrator:main"
abzu-memory-bootstrap = "scripts.bootstrap_memory:main"
abzu-bootstrap-world = "scripts.bootstrap_world:main"
abzu-world-export = "scripts.world_export:main"

[tool.poetry.scripts]
abzu = "cli:main"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-dir]
"" = "src"


[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
line-length = 88
target-version = "py310"
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E402", "I001"]

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88

[tool.coverage.run]
branch = true
source = ["."]
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 80

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
follow_imports = "skip"
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "fastapi.*",
    "librosa.*",
    "pydub.*",
    "soundfile.*",
    "requests.*",
    "pytest.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["memory.*", "tests.*"]
ignore_errors = true

[tool.poetry.extras]
spatial = ["torch", "open3d", "pytorch3d"]
mental = ["neo4j"]
emotional = ["transformers", "dlib"]
spiritual = []
narrative = ["chromadb", "pynvml"]
tracing = ["opentelemetry-api", "opentelemetry-exporter-otlp"]
