# Run `pre-commit autoupdate` after dependency upgrades.
repos:
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.12.11
  hooks:
  - id: ruff
    args:
    - --fix
- repo: https://github.com/psf/black
  rev: 24.4.2
  hooks:
  - id: black
    language_version: python3
- repo: https://github.com/pycqa/flake8
  rev: 7.1.0
  hooks:
  - id: flake8
- repo: https://github.com/PyCQA/bandit
  rev: 1.7.8
  hooks:
  - id: bandit
    args: ["--severity-level", "high", "--confidence-level", "high"]
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.17.1
  hooks:
  - id: mypy
    args: [--config-file=mypy.ini]
- repo: https://github.com/pycqa/pydocstyle
  rev: 6.3.0
  hooks:
  - id: pydocstyle
    files: ^$
- repo: local
  hooks:
  - id: confirm-reading
    name: Confirm onboarding reading
    entry: python scripts/confirm_reading.py
    language: system
    types: [python]
    pass_filenames: false
  - id: check-key-documents
    name: Check key documents exist
    entry: python scripts/check_key_documents.py
    language: system
    pass_filenames: false
  - id: validate-key-docs
    name: Validate protected doc hashes and summaries
    entry: python scripts/verify_doc_hashes.py
    language: system
    pass_filenames: false
  - id: require-onboarding-update
    name: Require onboarding confirmation for key docs
    entry: python scripts/require_onboarding_update.py
    language: system
    pass_filenames: false
    always_run: true
  - id: neoabzu-onboarding-check
    name: Ensure onboarding confirmation for NEOABZU code changes
    entry: python scripts/check_neoabzu_onboarding.py
    language: system
    pass_filenames: false
    stages: [commit]
  - id: verify-onboarding-refs
    name: Verify onboarding references
    entry: python scripts/verify_onboarding_refs.py
    language: system
    pass_filenames: false
    always_run: true
  - id: rust-fmt-clippy
    name: Run cargo fmt and clippy
    entry: bash -c 'cargo fmt --check && cargo clippy -- -D warnings'
    language: system
    types: [rust]
    pass_filenames: false
  - id: cargo-check
    name: Run cargo check
    entry: cargo check --workspace
    language: system
    pass_filenames: false
  - id: doc-indexer
    name: Regenerate documentation index
    entry: python tools/doc_indexer.py
    language: system
    pass_filenames: false
    files: ^docs/
  - id: ensure-blueprint-sync
    name: Ensure blueprint updated with core changes
    entry: python scripts/ensure_blueprint_sync.py
    language: system
  - id: block-binaries
    name: Block binary files
    entry: python scripts/check_no_binaries.py
    language: system
    pass_filenames: false
  - id: placeholder-elimination
    name: Placeholder Elimination
    entry: python scripts/check_placeholders.py
    language: system
  - id: scan-placeholder-tags
    name: Scan placeholder markers
    entry: python scripts/scan_todo_fixme.py
    language: system
    pass_filenames: false
    stages: [commit]
  - id: verify-versions
    name: Ensure modules declare __version__
    entry: python scripts/verify_versions.py
    language: system
    pass_filenames: false
  - id: verify-ip-tags
    name: Ensure IP-sensitive files registered
    entry: python scripts/verify_ip_tags.py
    language: system
    pass_filenames: false
  - id: check-connectors
    name: Validate connector placeholders and MCP adoption
    entry: python scripts/check_connectors.py
    language: system
    pass_filenames: false
  - id: check-connector-index
    name: Check connector index entries
    entry: python scripts/check_connector_index.py
    language: python
    pass_filenames: false
    files: ^(connectors/|docs/connectors/CONNECTOR_INDEX.md)
  - id: require-connector-registry-update
    name: Require connector registry updates
    entry: python scripts/require_connector_registry_update.py
    language: system
    pass_filenames: false
  - id: validate-component-index
    name: Validate component index entries
    entry: python scripts/validate_component_index.py
    language: system
    pass_filenames: false
    files: ^docs/component_index.md
  - id: validate-component-json
    name: Validate component_index.json fields
    entry: python scripts/validate_component_index_json.py
    language: system
    pass_filenames: false
    files: ^component_index.json$
  - id: validate-world-registry
    name: Validate world registry entries
    entry: python scripts/validate_world_registry.py
    language: system
    pass_filenames: false
    files: ^(worlds/|agents/|memory/|scripts/validate_world_registry.py)
  - id: require-module-docs
    name: Require changelog and component index for new modules
    entry: python scripts/require_module_docs.py
    language: system
    pass_filenames: false
    always_run: true
  - id: verify-dependencies
    name: Verify dependency versions
    entry: python scripts/verify_dependencies.py
    language: system
    pass_filenames: false
  - id: check-env
    name: Verify environment prerequisites
    entry: python scripts/check_env.py
    language: system
    pass_filenames: false
  - id: capture-failing-tests
    name: Capture failing pytest cases
    entry: python scripts/capture_failing_tests.py
    language: system
    pass_filenames: false
  - id: pytest-cov
    name: Run tests with coverage
    entry: pytest tests/agents/razar/test_boot_sequence.py tests/memory
    language: system
    pass_filenames: false
    always_run: true
    stages: [commit]
  - id: validate-links
    name: Validate markdown links
    entry: python scripts/validate_links.py
    language: system
    types: [markdown]
    exclude: ^docs/INDEX\.md$
  - id: validate-docs
    name: Validate documentation registry and cross-links
    entry: python scripts/validate_docs.py
    language: system
    pass_filenames: false
    files: ^(docs/chakra_versions.json|docs/chakra_koan_system.md)
  - id: audit-doctrine
    name: Audit documentation doctrine
    entry: python scripts/audit_doctrine.py
    language: system
    pass_filenames: false
    files: ^docs/
  - id: verify-doctrine-refs
    name: Verify doctrine references
    entry: python scripts/verify_doctrine_refs.py
    language: system
    pass_filenames: false
    files: ^docs/INDEX\.md$
  - id: verify-crate-refs
    name: Verify crate references in docs and pyproject
    entry: python scripts/verify_crate_refs.py
    language: system
    pass_filenames: false
  - id: verify-blueprint-refs
    name: Verify system blueprint crate references
    entry: python scripts/verify_blueprint_refs.py
    language: system
    pass_filenames: false
  - id: verify-pyo3-exposure
    name: Verify PyO3 exposure
    entry: python scripts/verify_pyo3_exposure.py
    language: system
    pass_filenames: false
  - id: verify-doc-refs
    name: Verify crate references in parity and crosswalk docs
    entry: python scripts/verify_doc_refs.py
    language: system
    pass_filenames: false
  - id: verify-docs-up-to-date
    name: Verify docs up to date
    entry: python scripts/verify_docs_up_to_date.py
    language: system
    pass_filenames: false
    files: ^docs/
    always_run: true
  - id: verify-chakra-monitoring
    name: Verify chakra monitoring
    entry: python scripts/verify_chakra_monitoring.py
    language: system
    pass_filenames: false
    files: ^(docs/|monitoring/)
  - id: verify-self-healing
    name: Verify self healing
    entry: python scripts/verify_self_healing.py
    language: system
    pass_filenames: false
    files: ^(docs/|logs/|quarantine/)

- repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
  rev: v9.19.0
  hooks:
    - id: commitlint
      stages: [commit-msg]
      additional_dependencies: ['@commitlint/cli@17.7.2']
